version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log

  # Kafka service
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      zookeeper: 
        condition: service_started 
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - app-network
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 30s 

  # Optional: Kafka UI for management
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - app-network

  mongo:
    image: mongo:6
    container_name: typeface-mongo
    restart: always
    ports:
      - "27018:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  authentication-service:
    build:
      context: ./AuthenticationService
    container_name: typeface-authentication-service
    restart: always
    ports:
      - "3001:3001"
    env_file:
      - ./AuthenticationService/.env
    depends_on:
      - mongo
      - kafka
    networks:
      - app-network

  expense-tracker-service:
    build:
      context: ./expense-tracker-service
    container_name: typeface-expense-tracker-service
    restart: always
    ports:
      - "3002:3002"
    env_file:
      - ./expense-tracker-service/.env
    depends_on:
      - mongo
      - kafka
    networks:
      - app-network

  notification-service:
    build:
      context: ./NotificationService
    container_name: typeface-notification-service
    restart: always
    ports:
      - "3003:3003"
    env_file:
      - ./NotificationService/.env
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - app-network

  nginx:
    build:
      context: ./nginx
    container_name: typeface-nginx
    restart: always
    ports:
      - "80:80"
    depends_on:
      - authentication-service
      - expense-tracker-service
      - notification-service
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
  zookeeper_data:
  zookeeper_logs:
  kafka_data:
